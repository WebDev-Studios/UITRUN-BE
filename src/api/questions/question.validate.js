/* eslint-disable no-param-reassign */
const Joi = require('@hapi/joi');
const { schemaValidator } = require('../../common/schema-validator/utils');

// We only require some field when create new question...
const questionCreateSchema = Joi.object({
    content: Joi.string().min(1).required(),
    answerA: Joi.string().min(1).required(),
    answerB: Joi.string().min(1).required(),
    answerC: Joi.string().min(1).required(),
    answerD: Joi.string().min(1).required(),
    result: Joi.valid('A', 'B', 'C', 'D').required(),
    image: Joi.string().max(255),
    isShuffle: Joi.valid(0, 1, true, false),
    categoryFourId: Joi.number().required(),
}).unknown(true);

//  ...but not when we update its data.
const questionUpdateSchema = Joi.object({
    content: Joi.string().min(1),
    answerA: Joi.string().min(1),
    answerB: Joi.string().min(1),
    answerC: Joi.string().min(1),
    answerD: Joi.string().min(1),
    result: Joi.valid('A', 'B', 'C', 'D'),
    image: Joi.string().max(255),
    isShuffle: Joi.valid(0, 1, true, false),
    categoryFourId: Joi.number(),
}).unknown(true);

module.exports = {
    // Use for create
    validateQuestionCreate: function (req, res, next) {
        try {
            schemaValidator(questionCreateSchema, req.body);

            // We dont need id, which is automatically generated by mysql
            delete req.body.id;

            next();
        } catch (err) {
            next(err);
        }
    },

    // Use for update
    validateQuestionUpdate: function (req, res, next) {
        try {
            schemaValidator(questionUpdateSchema, req.body);

            // We dont need id, which is automatically generated by mysql
            delete req.body.id;

            next();
        } catch (err) {
            next(err);
        }
    },
};
