/* eslint-disable no-param-reassign */
const Joi = require('@hapi/joi');
const { schemaValidator } = require('../../common/schema-validator/utils');

// We only require some field when create new question...
const questionCreateSchema = Joi.object({
    content: Joi.string().min(1).required(),
    answers: Joi.array()
        .min(2)
        .items(
            Joi.object({
                content: Joi.string().min(1).required(),
                isResult: Joi.valid(0, 1, true, false).required(),
            }),
        ),
    image: Joi.string().max(255),
    categoryFourId: Joi.number().required(),
}).unknown(true);

//  ...but not when we get or update its data.
const questionUpdateSchema = Joi.object({
    content: Joi.string().min(1),
    answers: Joi.array()
        .min(2)
        .items(
            Joi.object({
                content: Joi.string().min(1).required(),
                isResult: Joi.valid(0, 1, true, false).required(),
            }),
        ),
    image: Joi.string().max(255),
    categoryFourId: Joi.number(),
}).unknown(true);

module.exports = {
    // Use for create
    validateCreateSchema: function (req, res, next) {
        try {
            schemaValidator(questionCreateSchema, req.body);

            // We dont need id, which is automatically generated by mysql
            delete req.body.id;

            next();
        } catch (err) {
            next(err);
        }
    },

    // Use for update
    validateUpdateSchema: function (req, res, next) {
        try {
            schemaValidator(questionUpdateSchema, req.body);

            // We dont need id, which is automatically generated by mysql
            delete req.body.id;

            next();
        } catch (err) {
            next(err);
        }
    },
};
